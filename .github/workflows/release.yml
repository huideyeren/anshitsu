# from https://zenn.dev/u_not/articles/abcc0ebd71655b

name: Upload Python Package
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Next Version"
        required: true
        default: "x.y.z"
      release_note:
        description: "release note"
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: curl -sSL https://install.python-poetry.org | python3 -
    - name: Add Poetry Plugin
      # poetry plugin add 
      run: |
        python -m pip install --upgrade pip
        pip install poetry-version-plugin
    - name: PyPI Settings
      run: |
        poetry config pypi-token.pypi ${{secrets.PYPI_TOKEN}}
        poetry config virtualenvs.path --unset
        poetry config virtualenvs.in-project true
    - name: Build Poetry
      run: |
        git tag v${{ github.event.inputs.version }}
        poetry build
        poetry publish
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.version }}
        release_name: Release v${{ github.event.inputs.version }}
        body: |
          ${{ github.event.inputs.release_note }}
        draft: false
        prerelease: false
    - name: Get Name of Artifact
      run: |
        ARTIFACT_PATHNAME=$(ls dist/*.whl | head -n 1)
        ARTIFACT_NAME=$(basename $ARTIFACT_PATHNAME)
        echo "ARTIFACT_PATHNAME=${ARTIFACT_PATHNAME}" >> $GITHUB_ENV
        echo "ARTIFACT_NAME=${ARTIFACT_NAME}" >> $GITHUB_ENV
    - name: Upload Whl to Release Assets
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.ARTIFACT_PATHNAME }}
        asset_name: ${{ env.ARTIFACT_NAME }}
        asset_content_type: application/x-wheel+zip